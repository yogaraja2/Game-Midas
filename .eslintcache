[{"D:\\Midas\\Game-Midas\\src\\index.jsx":"1","D:\\Midas\\Game-Midas\\src\\reportWebVitals.js":"2","D:\\Midas\\Game-Midas\\src\\App.jsx":"3","D:\\Midas\\Game-Midas\\src\\routes.js":"4","D:\\Midas\\Game-Midas\\src\\utils\\Router\\RouteMapper.jsx":"5","D:\\Midas\\Game-Midas\\src\\config\\routes.js":"6","D:\\Midas\\Game-Midas\\src\\utils\\Router\\RedirectRoute.jsx":"7","D:\\Midas\\Game-Midas\\src\\pages\\Home\\index.jsx":"8","D:\\Midas\\Game-Midas\\src\\pages\\Account\\index.jsx":"9","D:\\Midas\\Game-Midas\\src\\pages\\Home\\routes.js":"10","D:\\Midas\\Game-Midas\\src\\pages\\Home\\GameControl\\index.jsx":"11","D:\\Midas\\Game-Midas\\src\\pages\\Account\\Login\\index.jsx":"12","D:\\Midas\\Game-Midas\\src\\pages\\Account\\Signup\\index.jsx":"13","D:\\Midas\\Game-Midas\\src\\components\\Footer\\index.jsx":"14","D:\\Midas\\Game-Midas\\src\\utils\\commonFunctions.js":"15","D:\\Midas\\Game-Midas\\src\\components\\LinkButton\\index.jsx":"16","D:\\Midas\\Game-Midas\\src\\components\\FormField\\index.jsx":"17","D:\\Midas\\Game-Midas\\src\\components\\DatePicker\\index.jsx":"18","D:\\Midas\\Game-Midas\\src\\components\\TextArea\\index.jsx":"19","D:\\Midas\\Game-Midas\\src\\components\\Select\\index.jsx":"20","D:\\Midas\\Game-Midas\\src\\components\\Textfield\\index.jsx":"21","D:\\Midas\\Game-Midas\\src\\pages\\Home\\SelectAvatar\\index.jsx":"22","D:\\Midas\\Game-Midas\\src\\pages\\Home\\LeaderBoard\\index.jsx":"23","D:\\Midas\\Game-Midas\\src\\pages\\Home\\SelectDream\\index.jsx":"24","D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\index.jsx":"25","D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\routes.js":"26","D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\Advisor\\index.jsx":"27","D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\Balance\\index.jsx":"28","D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\CashFlow\\index.jsx":"29","D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\Stats\\index.jsx":"30","D:\\Midas\\Game-Midas\\src\\pages\\Account\\SelectRole\\index.jsx":"31","D:\\Midas\\Game-Midas\\src\\Api.js":"32","D:\\Midas\\Game-Midas\\src\\BaseUrl.js":"33","D:\\Midas\\Game-Midas\\src\\components\\SnackBar\\index.jsx":"34","D:\\Midas\\Game-Midas\\src\\reducers\\response.js":"35","D:\\Midas\\Game-Midas\\src\\reducers\\index.js":"36"},{"size":797,"mtime":1609954146613,"results":"37","hashOfConfig":"38"},{"size":375,"mtime":1608712269019,"results":"39","hashOfConfig":"38"},{"size":805,"mtime":1609422588516,"results":"40","hashOfConfig":"38"},{"size":1030,"mtime":1609419893250,"results":"41","hashOfConfig":"38"},{"size":546,"mtime":1608898770000,"results":"42","hashOfConfig":"38"},{"size":329,"mtime":1609417677805,"results":"43","hashOfConfig":"38"},{"size":480,"mtime":1608693716000,"results":"44","hashOfConfig":"38"},{"size":469,"mtime":1609320940096,"results":"45","hashOfConfig":"38"},{"size":873,"mtime":1609419669652,"results":"46","hashOfConfig":"38"},{"size":1295,"mtime":1609323727255,"results":"47","hashOfConfig":"38"},{"size":1906,"mtime":1609173980595,"results":"48","hashOfConfig":"38"},{"size":2631,"mtime":1609174604378,"results":"49","hashOfConfig":"38"},{"size":9321,"mtime":1609942394613,"results":"50","hashOfConfig":"38"},{"size":278,"mtime":1608712269003,"results":"51","hashOfConfig":"38"},{"size":2002,"mtime":1608712269019,"results":"52","hashOfConfig":"38"},{"size":550,"mtime":1608712269003,"results":"53","hashOfConfig":"38"},{"size":4125,"mtime":1609768178803,"results":"54","hashOfConfig":"38"},{"size":1510,"mtime":1608712269003,"results":"55","hashOfConfig":"38"},{"size":885,"mtime":1608712269003,"results":"56","hashOfConfig":"38"},{"size":2688,"mtime":1608712269003,"results":"57","hashOfConfig":"38"},{"size":2927,"mtime":1608712269003,"results":"58","hashOfConfig":"38"},{"size":6707,"mtime":1609232349291,"results":"59","hashOfConfig":"38"},{"size":2470,"mtime":1609147004660,"results":"60","hashOfConfig":"38"},{"size":8196,"mtime":1609650608000,"results":"61","hashOfConfig":"38"},{"size":4018,"mtime":1609422725882,"results":"62","hashOfConfig":"38"},{"size":1451,"mtime":1609258489683,"results":"63","hashOfConfig":"38"},{"size":462,"mtime":1609422785400,"results":"64","hashOfConfig":"38"},{"size":472,"mtime":1609422800666,"results":"65","hashOfConfig":"38"},{"size":468,"mtime":1609422807115,"results":"66","hashOfConfig":"38"},{"size":459,"mtime":1609422813631,"results":"67","hashOfConfig":"38"},{"size":5903,"mtime":1609942356967,"results":"68","hashOfConfig":"38"},{"size":305,"mtime":1609771964935,"results":"69","hashOfConfig":"38"},{"size":96,"mtime":1609764148385,"results":"70","hashOfConfig":"38"},{"size":1846,"mtime":1609853048766,"results":"71","hashOfConfig":"38"},{"size":301,"mtime":1609954759917,"results":"72","hashOfConfig":"38"},{"size":180,"mtime":1609953900713,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v31ght",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Midas\\Game-Midas\\src\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\reportWebVitals.js",[],["151","152"],"D:\\Midas\\Game-Midas\\src\\App.jsx",[],"D:\\Midas\\Game-Midas\\src\\routes.js",[],"D:\\Midas\\Game-Midas\\src\\utils\\Router\\RouteMapper.jsx",[],"D:\\Midas\\Game-Midas\\src\\config\\routes.js",[],"D:\\Midas\\Game-Midas\\src\\utils\\Router\\RedirectRoute.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\Home\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\Account\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\Home\\routes.js",[],"D:\\Midas\\Game-Midas\\src\\pages\\Home\\GameControl\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\Account\\Login\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\Account\\Signup\\index.jsx",["153","154","155","156"],"import { Button } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  FormCheckBox,\r\n  FormTextfield\r\n} from '../../../components/FormField'\r\nimport LinkButton from '../../../components/LinkButton'\r\nimport SnackBar from '../../../components/SnackBar'\r\nimport { commonRoute } from '../../../config/routes'\r\nimport { getOriginPath } from '../../../utils/commonFunctions'\r\nimport './style.scss'\r\nimport API, { URL } from '../../../Api'\r\nimport SelectRole from '../SelectRole'\r\n\r\nfunction Signup() {\r\n\r\n  // const [instructors, setInstructors] = useState([])\r\n  // const [organizations, setOrganizations] = useState([])\r\n\r\n  const defaultValues = {\r\n    username: '',\r\n    gmail: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    // isAgreed: false\r\n  }\r\n  const { register, watch, control, errors, handleSubmit } = useForm({ defaultValues })\r\n  const history = useHistory()\r\n\r\n  const validationErr = {\r\n    name: 'Invalid name',\r\n    gmail: 'Invalid mail address',\r\n    passwordValidation: 'Password must contain alphaNumeric',\r\n    passwordLength: 'Required password length 8 to 20 characters',\r\n  }\r\n\r\n  const allyProps = { control, error: errors }\r\n\r\n  const [message, setMessage] = useState(null)\r\n  const [Error, setError] = useState(false)\r\n  const [detail, setDetail] = useState(null)\r\n  const [response, setResponse] = useState(null)\r\n  const [count, setCount] = useState(false)\r\n\r\n  const handleSignup = (data) => {\r\n    console.log(data)\r\n    if (data.password !== data.confirmPassword) {\r\n      console.log('wrong password')\r\n      setMessage(\"Incorrect password, please enter valid password\")\r\n      setError(true)\r\n    }\r\n    else {\r\n      // console.log('correct password')\r\n      API.post(URL.signup, data)\r\n        .then((res) => {\r\n          console.log('response below')\r\n          console.log(res)\r\n          const { data } = res\r\n          setResponse(data)\r\n          setCount(true)\r\n          if (data.token) {\r\n            localStorage.setItem('midasToken', data.token)\r\n            localStorage.setItem('userId', data.id)\r\n            localStorage.setItem('userName', data.username)\r\n            setMessage('Thanks! Your account has been created successfully')\r\n            setDetail(data)\r\n            setError(true)\r\n          } else if (data?.user.update === 'updated password') {\r\n            setError(true)\r\n            setMessage('Created successfully...Please do signin')\r\n          } else if (data.status) {\r\n            setError(true)\r\n            setMessage(data.message)\r\n            setMessage(\"Testing\")\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          // console.log(err.message)\r\n          setMessage(err.message)\r\n          setCount(true)\r\n        })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (count) {\r\n      if (response) {\r\n        console.log('response obj')\r\n        console.log(response)\r\n        setError(true)\r\n        // setMessage(response.message)\r\n        setCount(false)\r\n      } else {\r\n        setError(true)\r\n        setMessage('Something went Wrong')\r\n        setCount(false)\r\n      }\r\n    }\r\n  }, [response, count])\r\n\r\n  function handleOnClose(reason) {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    if (message === 'Created successfully...Please do signin') {\r\n      history.push(`${getOriginPath(commonRoute.account)}/login`)\r\n    }\r\n    if (detail.token) {\r\n      history.push(`${getOriginPath(commonRoute.account)}/selectRole`, { data: detail })\r\n      // setTimeout(() => {\r\n      //   <SelectRole responseData={detail} />\r\n      //   history.push(`${getOriginPath(commonRoute.account)}/selectRole`, { data: detail });\r\n      // }, 2000);\r\n      // <SelectRole responseData={detail} />\r\n      console.log('details')\r\n      console.log(detail)\r\n    }\r\n    setError(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"signup-box-sec\">\r\n      <h1 className=\"signup-title\">Sign-up</h1>\r\n      <form className=\"field-wrap\" onSubmit={handleSubmit(handleSignup)}>\r\n        <div className=\"form-field\">\r\n          <FormTextfield\r\n            className=\"user-name\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            placeholder=\"Midas\"\r\n            onChange={(e) => e.target.value}\r\n            rules={{\r\n              required: 'Please enter username',\r\n              minLength: {\r\n                value: 3,\r\n                message: validationErr.name\r\n              },\r\n              pattern: {\r\n                value: /^[A-Za-z]*$/,\r\n                message: validationErr.name\r\n              }\r\n            }}\r\n            error={errors.username && errors.username.message}\r\n            hasValidation\r\n            {...allyProps}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-field\">\r\n          <FormTextfield\r\n            className=\"gmail-field\"\r\n            name=\"gmail\"\r\n            label=\"E-Mail\"\r\n            placeholder=\"midas123@gmail.com\"\r\n            onChange={(e) => e.target.value}\r\n            rules={{\r\n              required: 'Please enter your gmail',\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: validationErr.gmail\r\n              }\r\n            }}\r\n            error={errors.gmail && errors.gmail.message}\r\n            hasValidation\r\n            {...allyProps}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-field\">\r\n          <FormTextfield\r\n            className=\"pswd-field\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            onChange={(e) => e.target.value}\r\n            rules={{\r\n              required: 'Please enter your password',\r\n              minLength: {\r\n                value: 8,\r\n                message: validationErr.passwordLength\r\n              },\r\n              maxLength: {\r\n                value: 20,\r\n                message: validationErr.passwordLength\r\n              },\r\n              pattern: {\r\n                value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,12}$/,\r\n                message: validationErr.passwordValidation\r\n              }\r\n            }}\r\n            error={errors.password && errors.password.message}\r\n            hasValidation\r\n            {...allyProps}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-field\">\r\n          <FormTextfield\r\n            className=\"pswd-field\"\r\n            label=\"Repeat Password\"\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            onChange={(e) => e.target.value}\r\n            rules={{\r\n              required: 'Please enter your password',\r\n              minLength: {\r\n                value: 6,\r\n                message: validationErr.passwordLength\r\n              },\r\n              maxLength: {\r\n                value: 12,\r\n                message: validationErr.passwordLength\r\n              },\r\n              pattern: {\r\n                value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,12}$/,\r\n                message: validationErr.passwordValidation\r\n              }\r\n            }}\r\n            error={errors.confirmPassword && errors.confirmPassword.message}\r\n            {...allyProps}\r\n          />\r\n        </div>\r\n\r\n        {/* <div className=\"form-field\">\r\n          <div className=\"signup-terms\">\r\n            <FormCheckBox\r\n              name=\"isAgreed\"\r\n              className=\"terms-checkbox\"\r\n              rules={{ required: 'Need to agree to the terms to continue' }}\r\n              error={!!errors.isAgreed && errors.isAgreed.message}\r\n              control={control}\r\n            />\r\n            <span className=\"term-cont\">By Signing up I Agree with</span>\r\n            <LinkButton className=\"terms-link\">Terms and Conditions</LinkButton>\r\n          </div>\r\n          {errors?.isAgreed?.message && (\r\n            <div className=\"err-msg\">{errors?.isAgreed?.message}</div>\r\n          )}\r\n        </div> */}\r\n\r\n        <div className=\"form-btns\">\r\n          <Button type=\"submit\" className=\"signin-btn\">\r\n            Signup\r\n          </Button>\r\n          <span className=\"cont\">or</span>\r\n          <LinkButton\r\n            className=\"signup-btn\"\r\n            onClick={() =>\r\n              history.push(`${getOriginPath(commonRoute.account)}/login`)\r\n            }\r\n          >\r\n            Login\r\n          </LinkButton>\r\n        </div>\r\n      </form>\r\n      {response && response.token && (\r\n        <SnackBar\r\n          openDialog={Error}\r\n          message={message}\r\n          onclose={handleOnClose}\r\n          severity={'success'}\r\n        />\r\n      )}\r\n      {response && response.update && (\r\n        <SnackBar\r\n          openDialog={Error}\r\n          message={message}\r\n          onclose={handleOnClose}\r\n          severity={'success'}\r\n        />\r\n      )}\r\n      {response && response.status && (\r\n        <SnackBar\r\n          openDialog={Error}\r\n          message={message}\r\n          onclose={handleOnClose}\r\n          severity={'info'}\r\n        />\r\n      )}\r\n      {!response && (\r\n        <SnackBar\r\n          openDialog={Error}\r\n          message={message}\r\n          onclose={handleOnClose}\r\n          severity={'error'}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","D:\\Midas\\Game-Midas\\src\\components\\Footer\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\utils\\commonFunctions.js",[],"D:\\Midas\\Game-Midas\\src\\components\\LinkButton\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\components\\FormField\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\components\\DatePicker\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\components\\TextArea\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\components\\Select\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\components\\Textfield\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\Home\\SelectAvatar\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\Home\\LeaderBoard\\index.jsx",["157","158","159","160"],"D:\\Midas\\Game-Midas\\src\\pages\\Home\\SelectDream\\index.jsx",["161","162"],"import React, { useState } from 'react'\r\nimport { Button, Grid } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\nimport './style.scss'\r\nimport doller from '../../../assets/img/doller 2.svg'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { commonRoute } from '../../../config/routes'\r\n\r\nconst SelectDream = ({ label, imgUrl, id, dream, setDream }) => {\r\n    const selected = dream === id ? 'selected' : '';\r\n    return (\r\n        <div className=\"option-wrap\" onClick={setDream.bind(this, id)}>\r\n            <div className=\"option-image\" >\r\n                <div className={`image-warp ${selected}`}>\r\n                    <img\r\n                        src={require(`../../../assets/img/${imgUrl}.svg`).default}\r\n                        alt={label}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"option-label\">{label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SelectCar = ({ label, imgUrl, cost, id, car, setCar }) => {\r\n    const selected = car === id ? 'selected' : ''\r\n    return (\r\n        <div className='option-wrap' onClick={setCar.bind(this, id)}>\r\n            <div className=\"option-image\">\r\n                <div className={`image-warp ${selected}`}>\r\n                    <img\r\n                        src={require(`../../../assets/img/${imgUrl}.svg`).default}\r\n                        alt={label}\r\n                    />\r\n                    <div style={{ marginTop: '10px', bottom: '5px' }}>\r\n                        <img src={doller} alt={label} style={{ width: 20, height: 21, position: 'absolute', }} />\r\n                        <span style={{\r\n                            position: 'relative', fontSize: 18,\r\n                            fontWeight: 'bold', color: ' #747d8c', marginLeft: 30\r\n                        }}>{cost}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"option-label\">{label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SelectHouse = ({ label, imgUrl, cost, id, house, setHouse }) => {\r\n    const selected = house === id ? 'selected' : ''\r\n    return (\r\n        <div className='option-wrap' onClick={setHouse.bind(this, id)} >\r\n            <div className=\"option-image\">\r\n                <div className={`image-warp ${selected}`}>\r\n                    <img\r\n                        src={require(`../../../assets/img/${imgUrl}.svg`).default}\r\n                        alt={label}\r\n                        style={{ width: 150, height: 100 }}\r\n                    />\r\n                    <div>\r\n                        <img src={doller} style={{ width: 20, height: 21, position: 'absolute', }} />\r\n                        <span style={{\r\n                            position: 'relative', fontSize: 18,\r\n                            fontWeight: 'bold', color: ' #747d8c', marginLeft: 30\r\n                        }}>\r\n                            {cost}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"option-label\">{label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SelectDreams() {\r\n\r\n    const [dream, setDream] = useState(null)\r\n    const [car, setCar] = useState(null)\r\n    const [house, setHouse] = useState(null)\r\n\r\n    const allyProps = { dream, setDream }\r\n    const restCar = { car, setCar }\r\n    const restHouse = { house, setHouse }\r\n\r\n    const history = useHistory();\r\n    const goToDashboard = () => {\r\n        history.push(commonRoute.dashBoard)\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} md={10} className=\"select-dreams-card\">\r\n            <div className=\"header-sec\">\r\n                <h3 className=\"main-head\">Select Dreams</h3>\r\n            </div>\r\n            <Grid\r\n                container\r\n                justify=\"space-around\"\r\n                alignContent=\"center\"\r\n                className=\"options-selector\"\r\n            >\r\n                <SelectDream\r\n                    label=\"Visit Taj Mahal\"\r\n                    imgUrl={`Traveller`}\r\n                    id={'visiting'}\r\n                    {...allyProps}\r\n                />\r\n                <SelectDream\r\n                    label=\"Travel To Abroad\"\r\n                    imgUrl={`Flight`}\r\n                    id={'flight'}\r\n                    {...allyProps}\r\n                />\r\n                <SelectDream\r\n                    label=\"Hill Station\"\r\n                    imgUrl={'HillStation'}\r\n                    id={'hillStation'}\r\n                    {...allyProps}\r\n                />\r\n                <SelectDream\r\n                    label=\"Visit Beach\"\r\n                    imgUrl={`Beach`}\r\n                    id={'beach'}\r\n                    {...allyProps}\r\n                />\r\n                <SelectDream\r\n                    label=\"Long Ride\"\r\n                    imgUrl={'BikeRide'}\r\n                    id={'bikeRide'}\r\n                    {...allyProps}\r\n                />\r\n            </Grid>\r\n\r\n            <div className=\"header-sec\">\r\n                <h3 className=\"main-head\">Cars</h3>\r\n            </div>\r\n            <Grid\r\n                container\r\n                justify=\"space-around\"\r\n                alignContent=\"center\"\r\n                className=\"options-selector\"\r\n            >\r\n                <SelectCar\r\n                    label=\"Relisible Car\"\r\n                    imgUrl={`RelisibleCar`}\r\n                    id={'relisibleCar'}\r\n                    cost={60000}\r\n                    {...restCar}\r\n                />\r\n                <SelectCar\r\n                    label=\"Economy Car\"\r\n                    imgUrl={`EconomyCar`}\r\n                    id={'economyCar'}\r\n                    cost={70000}\r\n                    {...restCar}\r\n                />\r\n                <SelectCar\r\n                    label=\"Fully Loaded Car\"\r\n                    imgUrl={'FullLoadCar'}\r\n                    id={'fullLoadCar'}\r\n                    cost={80000}\r\n                    {...restCar}\r\n                />\r\n                <SelectCar\r\n                    label=\"Luxury Car\"\r\n                    imgUrl={'LuxuryCar'}\r\n                    id={'luxuryCar'}\r\n                    cost={90000}\r\n                    {...restCar}\r\n                />\r\n                <SelectCar\r\n                    label=\"Speedster Car\"\r\n                    imgUrl={`SpeedsterCar`}\r\n                    id={'speedsterCar'}\r\n                    cost={100000}\r\n                    {...restCar}\r\n                />\r\n            </Grid>\r\n\r\n            <div className=\"header-sec\">\r\n                <h3 className=\"main-head\">House</h3>\r\n            </div>\r\n            <Grid\r\n                container\r\n                justify=\"space-around\"\r\n                alignContent=\"center\"\r\n                className=\"options-selector\"\r\n            >\r\n                <SelectHouse\r\n                    label=\"Studio Apartment\"\r\n                    imgUrl={`StudioApt`}\r\n                    id={'studioApt'}\r\n                    cost={1200000}\r\n                    {...restHouse}\r\n                />\r\n                <SelectHouse\r\n                    label=\"Fixer Upper\"\r\n                    imgUrl={`FixerUp`}\r\n                    id={'fixerUp'}\r\n                    cost={1300000}\r\n                    {...restHouse}\r\n                />\r\n                <SelectHouse\r\n                    label=\"Rambler\"\r\n                    imgUrl={'Rambler'}\r\n                    id={'rambler'}\r\n                    cost={1400000}\r\n                    {...restHouse}\r\n                />\r\n                <SelectHouse\r\n                    label=\"Mansion\"\r\n                    imgUrl={`Mansion`}\r\n                    id={'mansion'}\r\n                    cost={1500000}\r\n                    {...restHouse}\r\n                />\r\n                <SelectHouse\r\n                    label=\"Chateau\"\r\n                    imgUrl={'Chateau'}\r\n                    id={'chateau'}\r\n                    cost={1600000}\r\n                    {...restHouse}\r\n                />\r\n            </Grid>\r\n\r\n            <div className=\"btn-wrap\">\r\n                <Button className=\"nxt-btn\" onClick={goToDashboard}>Next</Button>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SelectDreams","D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\routes.js",[],["163","164"],"D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\Advisor\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\Balance\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\CashFlow\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\DashBoard\\Stats\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\pages\\Account\\SelectRole\\index.jsx",["165","166"],"import React, { useEffect, useState } from 'react'\r\nimport { FormDropdown } from '../../../components/FormField'\r\nimport Textfield from '../../../components/Textfield'\r\nimport { Button } from '@material-ui/core'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { commonRoute } from '../../../config/routes'\r\nimport './styles.scss'\r\n\r\nfunction SelectRole(props) {\r\n\r\n    // const location = useLocation();\r\n\r\n    // useEffect(() => {\r\n    //     console.log('location')\r\n    //     console.log(location.data)\r\n    // }, [location])\r\n\r\n    // const { responseData } = props\r\n    // { console.log('props below') }\r\n    // console.log(responseData)\r\n\r\n    const roleOptions = [\r\n        { id: 'individual', value: 'Individual' },\r\n        { id: 'student', value: 'Student' },\r\n        { id: 'instructor', value: 'Instructor' },\r\n        { id: 'schoolAdmin', value: 'School Admin' }\r\n    ]\r\n    const schoolOptions = [\r\n        { id: 'schoolA', value: 'School A' },\r\n        { id: 'schoolB', value: 'School B' },\r\n        { id: 'schoolC', value: 'School C' },\r\n        { id: 'schoolD', value: 'School D' },\r\n    ]\r\n    const allInstructor = [\r\n        { id: 'antony', value: 'Antony' },\r\n        { id: 'bairstow', value: 'Bairstow' },\r\n        { id: 'christober', value: 'Christober' },\r\n        { id: 'david', value: 'David' },\r\n    ]\r\n\r\n    // const schoolOptions = props.responseData.organizations;\r\n    // const allInstructor = props.responseData.instructors;\r\n\r\n    const subscriptionPeriod = [\r\n        { id: 'one', value: '1 Year' },\r\n        { id: 'two', value: '2 Year' },\r\n        { id: 'three', value: '3 Year' },\r\n    ]\r\n\r\n    const defaultValues = {\r\n        role: '',\r\n        school: '',\r\n        instructor: '',\r\n        organization: '',\r\n        subscription: '',\r\n    }\r\n\r\n    const [role, setRole] = useState(defaultValues.role)\r\n\r\n    const { control, errors, handleSubmit } = useForm({ defaultValues })\r\n    const history = useHistory()\r\n\r\n    const otherProps = { control, error: errors }\r\n\r\n    const onSubmitHandler = (values) => {\r\n        console.log(values)\r\n        history.push(commonRoute.gameOptions)\r\n    }\r\n\r\n    return (\r\n        <div className=\"role-box-sec\">\r\n            <h1 className=\"title\">Select Your Role</h1>\r\n            <form className=\"field-wrap\" onSubmit={handleSubmit(onSubmitHandler)}>\r\n                <div className=\"form-field\">\r\n                    <FormDropdown\r\n                        name=\"role\"\r\n                        className=\"role-field\"\r\n                        label=\"Choose the Role\"\r\n                        list={roleOptions}\r\n                        placeholder=\"Select\"\r\n                        autoFocus\r\n                        onChange={(e) => setRole(e.target.value)}\r\n                        rules={{ required: 'Please select your role' }}\r\n                        {...otherProps}\r\n                    />\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <FormDropdown\r\n                        name=\"school\"\r\n                        className=\"school-field\"\r\n                        label=\"Choose the School\"\r\n                        list={schoolOptions}\r\n                        placeholder=\"Select\"\r\n                        onChange={(e) => e.target.value}\r\n                        rules={(role === 'student' || role === 'instructor') && { required: 'Please select your school' }}\r\n                        disabled={!(role === 'student' || role === 'instructor') ? true : false}\r\n                        {...otherProps}\r\n                    />\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <FormDropdown\r\n                        name=\"instructor\"\r\n                        className=\"instructor-field\"\r\n                        label=\"Choose Your Instructor (Optional)\"\r\n                        list={allInstructor}\r\n                        placeholder=\"Select\"\r\n                        onChange={(e) => e.target.value}\r\n                        rules={(role === 'student') && { required: 'Please select your instructor' }}\r\n                        disabled={!(role === 'student') ? true : false}\r\n                        {...otherProps}\r\n                    />\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <Textfield\r\n                        id=\"organization\"\r\n                        name=\"organization\"\r\n                        label=\"Organization name\"\r\n                        placeholder=\"enter organization name\"\r\n                        required\r\n                        onChange={(e) => e.target.value}\r\n                        rules={(role === 'schoolAdmin') && { required: 'Please enter organization name' }}\r\n                        disabled={!(role === 'schoolAdmin') ? true : false}\r\n                        {...otherProps}\r\n                    />\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <FormDropdown\r\n                        name=\"subscription\"\r\n                        className=\"subscription-field\"\r\n                        label=\"Choose subscription period\"\r\n                        list={subscriptionPeriod}\r\n                        placeholder=\"Select\"\r\n                        onChange={(e) => e.target.value}\r\n                        rules={(role === 'schoolAdmin') && { required: 'Please select subscription period' }}\r\n                        disabled={!(role === 'schoolAdmin') ? true : false}\r\n                        {...otherProps}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-btns\">\r\n                    <Button type=\"submit\" className=\"signin-btn\">\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectRole\r\n","D:\\Midas\\Game-Midas\\src\\Api.js",[],"D:\\Midas\\Game-Midas\\src\\BaseUrl.js",[],"D:\\Midas\\Game-Midas\\src\\components\\SnackBar\\index.jsx",[],"D:\\Midas\\Game-Midas\\src\\reducers\\response.js",[],"D:\\Midas\\Game-Midas\\src\\reducers\\index.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":6,"column":3,"nodeType":"173","messageId":"174","endLine":6,"endColumn":15},{"ruleId":"171","severity":1,"message":"175","line":15,"column":8,"nodeType":"173","messageId":"174","endLine":15,"endColumn":18},{"ruleId":"171","severity":1,"message":"176","line":29,"column":11,"nodeType":"173","messageId":"174","endLine":29,"endColumn":19},{"ruleId":"171","severity":1,"message":"177","line":29,"column":21,"nodeType":"173","messageId":"174","endLine":29,"endColumn":26},{"ruleId":"171","severity":1,"message":"178","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"179","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":17},{"ruleId":"171","severity":1,"message":"180","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":16},{"ruleId":"171","severity":1,"message":"181","line":6,"column":8,"nodeType":"173","messageId":"174","endLine":6,"endColumn":17},{"ruleId":"171","severity":1,"message":"182","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":12},{"ruleId":"183","severity":1,"message":"184","line":62,"column":25,"nodeType":"185","endLine":62,"endColumn":102},{"ruleId":"167","replacedBy":"186"},{"ruleId":"169","replacedBy":"187"},{"ruleId":"171","severity":1,"message":"188","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"189","line":5,"column":22,"nodeType":"173","messageId":"174","endLine":5,"endColumn":33},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'FormCheckBox' is defined but never used.","Identifier","unusedVar","'SelectRole' is defined but never used.","'register' is assigned a value but never used.","'watch' is assigned a value but never used.","'useState' is defined but never used.","'TableBody' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'clsx' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["190"],["191"],"'useEffect' is defined but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation"]