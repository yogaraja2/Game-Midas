[{"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/reportWebVitals.js":"1","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/routes.js":"2","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Home/index.jsx":"3","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Account/SelectRole/index.jsx":"4","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Home/SelectDream/index.jsx":"5","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/FormField/index.jsx":"6","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/Select/index.jsx":"7","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Account/index.jsx":"8","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Home/GameControl/index.jsx":"9","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/index.jsx":"10","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/index.jsx":"11","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/index.jsx":"12","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/utils/Router/RouteMapper.jsx":"13","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Account/Signup/index.jsx":"14","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/SnackBar/index.jsx":"15","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/utils/Router/RedirectRoute.jsx":"16","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Home/routes.js":"17","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Account/Login/index.jsx":"18","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/TextArea/index.jsx":"19","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/DashHead.jsx":"20","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/YearBar/index.jsx":"21","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/Card/index.jsx":"22","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/App.jsx":"23","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/LinkButton/index.jsx":"24","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/utils/commonFunctions.js":"25","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/DatePicker/index.jsx":"26","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/Income.jsx":"27","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/Entry.jsx":"28","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/FExpenses.jsx":"29","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/VExpenses.jsx":"30","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/StatTotal.jsx":"31","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/SatisfactionCard.jsx":"32","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/Advisor/index.jsx":"33","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/config/routes.js":"34"},{"size":362,"mtime":1608577880000,"results":"35","hashOfConfig":"36"},{"size":1081,"mtime":1610715440869,"results":"37","hashOfConfig":"36"},{"size":445,"mtime":1610367316295,"results":"38","hashOfConfig":"36"},{"size":8565,"mtime":1610367316291,"results":"39","hashOfConfig":"36"},{"size":8573,"mtime":1610367316295,"results":"40","hashOfConfig":"36"},{"size":3933,"mtime":1610367316291,"results":"41","hashOfConfig":"36"},{"size":2688,"mtime":1608637057000,"results":"42","hashOfConfig":"36"},{"size":886,"mtime":1610371113054,"results":"43","hashOfConfig":"36"},{"size":1919,"mtime":1610372525648,"results":"44","hashOfConfig":"36"},{"size":1322,"mtime":1610707250675,"results":"45","hashOfConfig":"36"},{"size":4141,"mtime":1610723227840,"results":"46","hashOfConfig":"36"},{"size":829,"mtime":1610367316291,"results":"47","hashOfConfig":"36"},{"size":525,"mtime":1608582717000,"results":"48","hashOfConfig":"36"},{"size":8852,"mtime":1610367316291,"results":"49","hashOfConfig":"36"},{"size":1769,"mtime":1610367316291,"results":"50","hashOfConfig":"36"},{"size":480,"mtime":1608119528000,"results":"51","hashOfConfig":"36"},{"size":1235,"mtime":1610367316295,"results":"52","hashOfConfig":"36"},{"size":4263,"mtime":1610367316291,"results":"53","hashOfConfig":"36"},{"size":885,"mtime":1608119528000,"results":"54","hashOfConfig":"36"},{"size":950,"mtime":1610711747311,"results":"55","hashOfConfig":"36"},{"size":901,"mtime":1610561975828,"results":"56","hashOfConfig":"36"},{"size":472,"mtime":1610560857240,"results":"57","hashOfConfig":"36"},{"size":768,"mtime":1608640839000,"results":"58","hashOfConfig":"36"},{"size":550,"mtime":1608119528000,"results":"59","hashOfConfig":"36"},{"size":2002,"mtime":1608571088000,"results":"60","hashOfConfig":"36"},{"size":1510,"mtime":1608119528000,"results":"61","hashOfConfig":"36"},{"size":524,"mtime":1610702947819,"results":"62","hashOfConfig":"36"},{"size":564,"mtime":1610701785034,"results":"63","hashOfConfig":"36"},{"size":441,"mtime":1610703745190,"results":"64","hashOfConfig":"36"},{"size":520,"mtime":1610703842842,"results":"65","hashOfConfig":"36"},{"size":620,"mtime":1610702657208,"results":"66","hashOfConfig":"36"},{"size":983,"mtime":1610709758271,"results":"67","hashOfConfig":"36"},{"size":447,"mtime":1610367316295,"results":"68","hashOfConfig":"36"},{"size":460,"mtime":1610720194484,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ftyci9",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/reportWebVitals.js",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/routes.js",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Home/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Account/SelectRole/index.jsx",["144","145","146"],"import React, { useEffect, useState } from 'react'\nimport { FormDropdown, FormTextfield } from '../../../components/FormField'\nimport { Button } from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { commonRoute } from '../../../config/routes'\nimport './styles.scss'\nimport API, { URL } from '../../../Api'\nimport { useSelector, connect } from 'react-redux'\nimport SnackBar from '../../../components/SnackBar'\n\nfunction SelectRole() {\n    // useSelector hook is used for get state from reducers. a.k.a: Receiver page\n    const getApiData = useSelector(state => state.signupData)\n\n    const [tempInstructors, setTempInstructors] = useState(null)\n    const [tempOrganizations, setTempOrganizations] = useState(null)\n    const [instructor, setInstructor] = useState(null)\n    const [organization, setOrganization] = useState(null)\n\n    useEffect(() => {\n        // console.log('from 2nd page')\n        // console.log(getApiData)\n        if (getApiData) {\n            setTempInstructors(getApiData.instructors);\n            setTempOrganizations(getApiData.organizations);\n        }\n        if (tempInstructors) {\n            setInstructor(tempInstructors.map((item, index) => ({ id: item.id, value: item.username, tenant_key: item.tenant_key })));\n        }\n        if (tempOrganizations) {\n            setOrganization(tempOrganizations.map((item, index) => ({ id: item.id, value: item.organizationName, tenant_key: item.tenant_key })));\n        }\n\n    }, [getApiData, tempInstructors, tempOrganizations])\n\n    // console.log('instructor')\n    // console.log(instructors)\n    // console.log('organization')\n    // console.log(organizations)\n\n    const defaultValues = {\n        role: null,\n        organizationId: null,\n        instructorId: null,\n        newOrganization: null,\n        subscription: null,\n    }\n\n    const roleOptions = [\n        { id: 'Individual', value: 'Individual' },\n        { id: 'Student', value: 'Student' },\n        { id: 'Instructor', value: 'Instructor' },\n        { id: 'School_Admin', value: 'School Admin' }\n    ]\n\n    const subscriptionPeriod = [\n        { id: 1, value: '1 Year' },\n        { id: 2, value: '2 Year' },\n        { id: 3, value: '3 Year' },\n    ]\n\n    const [message, setMessage] = useState(null)\n    const [Error, setError] = useState(false)\n    const [detail, setDetail] = useState(null)\n    const [response, setResponse] = useState(null)\n    const [count, setCount] = useState(false)\n\n    const [role, setRole] = useState(defaultValues.role)\n\n    const { control, errors, handleSubmit } = useForm(defaultValues)\n    const history = useHistory()\n\n    const otherProps = { control, error: errors }\n\n    const token = localStorage.getItem('midasToken')\n    const auth = 'Bearer '.concat(token)\n\n    const onSubmitHandler = (values) => {\n        console.log('entry')\n        console.log(values)\n\n        API.post(URL.userprofile, values, {\n            headers: {\n                Authorization: auth\n            }\n        })\n            .then((res) => {\n                console.log('res entry')\n                console.log(res)\n                const { data } = res;\n                setResponse(res)\n                setCount(true)\n\n                if (res?.status === 200) {\n                    setDetail(data)\n                    setMessage('Submitted Successfully...')\n                }\n            })\n            .catch((err) => {\n                // console.log('error section')\n                // console.log(err)\n                setMessage(err.message)\n                setCount(true)\n            })\n    }\n\n    useEffect(() => {\n        if (count) {\n            if (response) {\n                setError(true)\n                setCount(false)\n            } else {\n                setError(true)\n                setCount(false)\n                setMessage('Something went wrong')\n            }\n        }\n    }, [response, count])\n\n    function handleOnClose(reason) {\n        if (reason === 'clickaway') {\n            return\n        }\n        if (response?.status === 200) {\n            history.push(commonRoute.gameOptions)\n        }\n        setError(false)\n    }\n\n    // console.log('default')\n    // console.log(defaultValues)\n\n    return (\n        <div className=\"role-box-sec\">\n            <h1 className=\"title\">Select Your Role</h1>\n\n            <form className=\"field-wrap\" onSubmit={handleSubmit(onSubmitHandler)}>\n                <div className=\"form-field\">\n                    <FormDropdown\n                        id=\"role\"\n                        name=\"role\"\n                        className=\"role-field\"\n                        label=\"Choose the Role\"\n                        list={roleOptions}\n                        placeholder=\"Select\"\n                        autoFocus\n                        onChange={(e) => setRole(e.target.value)}\n                        rules={{ required: 'Please select your role' }}\n                        {...otherProps}\n                    />\n                </div>\n                <div className=\"form-field\">\n                    <FormDropdown\n                        id=\"organizationId\"\n                        name=\"organizationId\"\n                        className=\"organizations-field\"\n                        label=\"Choose the organization\"\n                        list={organization ? organization : []}\n                        placeholder=\"Select\"\n                        rules={(role === 'Student' || role === 'Instructor') && { required: 'Please select your school' }}\n                        disabled={!(role === 'Student' || role === 'Instructor') ? true : false}\n                        {...otherProps}\n                    />\n                </div>\n                <div className=\"form-field\">\n                    <FormDropdown\n                        id=\"instructorId\"\n                        name=\"instructorId\"\n                        className=\"instructor-field\"\n                        label=\"Choose Your Instructor (Optional)\"\n                        list={instructor ? instructor : []}\n                        placeholder=\"Select\"\n                        // rules={(role === 'Student') && { required: 'Please select your instructor' }}\n                        disabled={!(role === 'Student') ? true : false}\n                        {...otherProps}\n                    />\n                </div>\n                <div className=\"form-field\">\n                    <FormTextfield\n                        id=\"newOrganization\"\n                        name=\"newOrganization\"\n                        label=\"Create Organization\"\n                        placeholder=\"enter organization name\"\n                        required\n                        rules={(role === 'School_Admin') && { required: 'Please enter organization name' }}\n                        disabled={!(role === 'School_Admin') ? true : false}\n                        {...otherProps}\n                    />\n                </div>\n                <div className=\"form-field\">\n                    <FormDropdown\n                        id=\"subscription\"\n                        name=\"subscription\"\n                        className=\"subscription-field\"\n                        label=\"Choose subscription period\"\n                        list={subscriptionPeriod}\n                        placeholder=\"Select\"\n                        onChange={(e) => e.target.value}\n                        rules={(role === 'School_Admin') && { required: 'Please select subscription period' }}\n                        disabled={!(role === 'School_Admin') ? true : false}\n                        {...otherProps}\n                    />\n                </div>\n\n                <div className=\"form-btns\">\n                    <Button type=\"submit\" className=\"signin-btn\">\n                        Submit\n                    </Button>\n                </div>\n            </form>\n            {response && response.status && (\n                <SnackBar\n                    openDialog={Error}\n                    message={message}\n                    onclose={handleOnClose}\n                    severity={'success'}\n                />\n            )}\n            {!response && (\n                <SnackBar\n                    openDialog={Error}\n                    message={message}\n                    onclose={handleOnClose}\n                    severity={'error'}\n                />\n            )}\n        </div>\n    )\n}\n\n// const mapStateToProps = (state) => {\n//     return {\n//         response: state.response\n//     }\n// }\n\nexport default SelectRole\n",["147","148"],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Home/SelectDream/index.jsx",["149","150"],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/FormField/index.jsx",[],["151","152"],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/Select/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Account/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Home/GameControl/index.jsx",["153"],"import React, { useState } from 'react'\nimport { Button, Grid } from '@material-ui/core'\nimport { commonRoute } from '../../../config/routes'\nimport { useHistory } from 'react-router-dom'\nimport clsx from 'clsx'\nimport './style.scss'\n\nconst Options = ({ label, imgUrl, id, selected, setSelected }) => {\n  return (\n    <div\n      className={clsx('option-wrap', { selected: selected === id })}\n      onClick={setSelected.bind(this, id)}\n    >\n      <div className=\"option-label\">{label}</div>\n      <div className=\"option-image\">\n        <div className=\"selector-bg\">\n          <div className=\"image-warp\">\n            <img\n              src={require(`../../../assets/img/${imgUrl}.svg`).default}\n              alt={label}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GameControl() {\n  const [selected, setSelected] = useState('new')\n\n  const allyProps = { selected, setSelected }\n  const history = useHistory()\n\n  const clickHandler = () => {\n    if (selected === 'leaderboard') {\n      history.push(commonRoute.leaderboard)\n    } else if (selected == 'resume') {\n      history.push(commonRoute.dashBoard)\n    } else {\n      history.push(commonRoute.selectAvatar)\n    }\n  }\n\n  return (\n    <Grid item xs={11} md={10} className=\"game-option-card\">\n      <Grid\n        container\n        justify=\"space-around\"\n        alignContent=\"center\"\n        className=\"options-selector\"\n      >\n        <Options\n          label=\"Leader Board\"\n          imgUrl={`Leader-Board`}\n          id=\"leaderboard\"\n          {...allyProps}\n        />\n        <Options label=\"New\" imgUrl={`New`} id=\"new\" {...allyProps} />\n        <Options label=\"Resume\" imgUrl={'Resume'} id=\"resume\" {...allyProps} />\n      </Grid>\n      <div className=\"btn-wrap\">\n        <Button className=\"nxt-btn\" onClick={clickHandler}>\n          Next\n        </Button>\n      </div>\n    </Grid>\n  )\n}\n\nexport default GameControl\n",["154","155"],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/utils/Router/RouteMapper.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Account/Signup/index.jsx",["156","157","158"],"import { Button } from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\nimport {\n  FormCheckBox,\n  FormTextfield\n} from '../../../components/FormField'\nimport LinkButton from '../../../components/LinkButton'\nimport SnackBar from '../../../components/SnackBar'\nimport { commonRoute } from '../../../config/routes'\nimport { getOriginPath } from '../../../utils/commonFunctions'\nimport './style.scss'\nimport API, { URL } from '../../../Api'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setResponseData } from '../../../action'\n\nfunction Signup() {\n\n  const ApiResponse = useSelector(state => state.signupData)\n  useEffect(() => {\n    console.log('from signup')\n    console.log(ApiResponse)\n  }, [ApiResponse])\n\n  const dispatch = useDispatch()\n\n  const defaultValues = {\n    username: '',\n    gmail: '',\n    password: '',\n    confirmPassword: '',\n    // isAgreed: false\n  }\n  const { register, watch, control, errors, handleSubmit } = useForm(defaultValues)\n  const history = useHistory()\n\n  const validationErr = {\n    name: 'Invalid name',\n    gmail: 'Invalid mail address',\n    passwordValidation: 'Password must contain alphaNumeric',\n    passwordLength: 'Required password length 8 to 20 letters',\n  }\n\n  const allyProps = { control, error: errors }\n\n  const [message, setMessage] = useState(null)\n  const [Error, setError] = useState(false)\n  const [detail, setDetail] = useState(null)\n  const [response, setResponse] = useState(null)\n  const [count, setCount] = useState(false)\n\n  const handleSignup = (data) => {\n    // console.log(data)\n    if (data.password !== data.confirmPassword) {\n      console.log('wrong password')\n      setMessage(\"Incorrect password, please enter valid password\")\n      setError(true)\n    }\n    else {\n      // console.log('correct password')\n      API.post(URL.signup, data)\n        .then((res) => {\n          // console.log('response below')\n          // console.log(res)\n          const { data } = res\n          dispatch(setResponseData(data)) // dispatching action to store a.k.a: Provider page\n          setResponse(data)\n          setCount(true)\n          if (data.token) {\n            localStorage.setItem('midasToken', data.token)\n            localStorage.setItem('userId', data.id)\n            localStorage.setItem('userName', data.username)\n            setMessage('Thanks! Your account has been created successfully')\n            setDetail(data)\n            setError(true)\n          } else if (data?.user.update === 'updated password') {\n            setError(true)\n            setMessage('Created successfully...Please do signin')\n          } else if (data.status) {\n            setError(true)\n            setMessage(data.message)\n            setMessage(\"Testing\")\n          }\n        })\n        .catch((err) => {\n          // console.log(err.message)\n          setMessage(err.message)\n          setCount(true)\n        })\n    }\n  }\n\n  useEffect(() => {\n    if (count) {\n      if (response) {\n        setError(true)\n        setCount(false)\n      } else {\n        setError(true)\n        setMessage('Something went Wrong')\n        setCount(false)\n      }\n    }\n  }, [response, count])\n\n  function handleOnClose(reason) {\n    if (reason === 'clickaway') {\n      return\n    }\n    if (message === 'Created successfully...Please do signin') {\n      history.push(`${getOriginPath(commonRoute.account)}/login`)\n    }\n    if (detail?.token) {\n      history.push(`${getOriginPath(commonRoute.account)}/selectRole`)\n    }\n    setError(false)\n  }\n\n  return (\n    <div className=\"signup-box-sec\">\n      <h1 className=\"signup-title\">Sign-up</h1>\n      <form className=\"field-wrap\" onSubmit={handleSubmit(handleSignup)}>\n        <div className=\"form-field\">\n          <FormTextfield\n            className=\"user-name\"\n            label=\"Username\"\n            name=\"username\"\n            placeholder=\"Midas\"\n            onChange={(e) => e.target.value}\n            rules={{\n              required: 'Please enter username',\n              minLength: {\n                value: 3,\n                message: validationErr.name\n              },\n              pattern: {\n                value: /^[A-Za-z]*$/,\n                message: validationErr.name\n              }\n            }}\n            error={errors.username && errors.username.message}\n            hasValidation\n            {...allyProps}\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <FormTextfield\n            className=\"gmail-field\"\n            name=\"gmail\"\n            label=\"E-Mail\"\n            placeholder=\"midas123@gmail.com\"\n            onChange={(e) => e.target.value}\n            rules={{\n              required: 'Please enter your gmail',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: validationErr.gmail\n              }\n            }}\n            error={errors.gmail && errors.gmail.message}\n            hasValidation\n            {...allyProps}\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <FormTextfield\n            className=\"pswd-field\"\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"********\"\n            onChange={(e) => e.target.value}\n            rules={{\n              required: 'Please enter your password',\n              minLength: {\n                value: 8,\n                message: validationErr.passwordLength\n              },\n              maxLength: {\n                value: 20,\n                message: validationErr.passwordLength\n              },\n              pattern: {\n                value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,12}$/,\n                message: validationErr.passwordValidation\n              }\n            }}\n            error={errors.password && errors.password.message}\n            hasValidation\n            {...allyProps}\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <FormTextfield\n            className=\"pswd-field\"\n            label=\"Repeat Password\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            placeholder=\"********\"\n            onChange={(e) => e.target.value}\n            rules={{\n              required: 'Please enter your password',\n              minLength: {\n                value: 6,\n                message: validationErr.passwordLength\n              },\n              maxLength: {\n                value: 12,\n                message: validationErr.passwordLength\n              },\n              pattern: {\n                value: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,12}$/,\n                message: validationErr.passwordValidation\n              }\n            }}\n            error={errors.confirmPassword && errors.confirmPassword.message}\n            {...allyProps}\n          />\n        </div>\n\n        {/* <div className=\"form-field\">\n          <div className=\"signup-terms\">\n            <FormCheckBox\n              name=\"isAgreed\"\n              className=\"terms-checkbox\"\n              rules={{ required: 'Need to agree to the terms to continue' }}\n              error={!!errors.isAgreed && errors.isAgreed.message}\n              control={control}\n            />\n            <span className=\"term-cont\">By Signing up I Agree with</span>\n            <LinkButton className=\"terms-link\">Terms and Conditions</LinkButton>\n          </div>\n          {errors?.isAgreed?.message && (\n            <div className=\"err-msg\">{errors?.isAgreed?.message}</div>\n          )}\n        </div> */}\n\n        <div className=\"form-btns\">\n          <Button type=\"submit\" className=\"signin-btn\">\n            Signup\n          </Button>\n          <span className=\"cont\">or</span>\n          <LinkButton\n            className=\"signup-btn\"\n            onClick={() =>\n              history.push(`${getOriginPath(commonRoute.account)}/login`)\n            }\n          >\n            Login\n          </LinkButton>\n        </div>\n      </form>\n      {response && response.token && (\n        <SnackBar\n          openDialog={Error}\n          message={message}\n          onclose={handleOnClose}\n          severity={'success'}\n        />\n      )}\n      {response && response.update && (\n        <SnackBar\n          openDialog={Error}\n          message={message}\n          onclose={handleOnClose}\n          severity={'success'}\n        />\n      )}\n      {response && response.status && (\n        <SnackBar\n          openDialog={Error}\n          message={message}\n          onclose={handleOnClose}\n          severity={'info'}\n        />\n      )}\n      {!response && (\n        <SnackBar\n          openDialog={Error}\n          message={message}\n          onclose={handleOnClose}\n          severity={'error'}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Signup\n","/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/SnackBar/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/utils/Router/RedirectRoute.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Home/routes.js",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/Account/Login/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/TextArea/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/DashHead.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/YearBar/index.jsx",["159"],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/Card/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/App.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/LinkButton/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/utils/commonFunctions.js",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/components/DatePicker/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/Income.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/Entry.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/FExpenses.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/VExpenses.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/StatTotal.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/CashFlow/SatisfactionCard.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/pages/DashBoard/Advisor/index.jsx",[],"/home/softsuave/Documents/rmk/projects/midass/midas-ui/src/config/routes.js",[],{"ruleId":"160","severity":1,"message":"161","line":4,"column":22,"nodeType":"162","messageId":"163","endLine":4,"endColumn":33},{"ruleId":"160","severity":1,"message":"164","line":9,"column":23,"nodeType":"162","messageId":"163","endLine":9,"endColumn":30},{"ruleId":"160","severity":1,"message":"165","line":65,"column":12,"nodeType":"162","messageId":"163","endLine":65,"endColumn":18},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"160","severity":1,"message":"170","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":12},{"ruleId":"171","severity":1,"message":"172","line":69,"column":25,"nodeType":"173","endLine":69,"endColumn":102},{"ruleId":"166","replacedBy":"174"},{"ruleId":"168","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":38,"column":25,"nodeType":"178","messageId":"179","endLine":38,"endColumn":27},{"ruleId":"166","replacedBy":"180"},{"ruleId":"168","replacedBy":"181"},{"ruleId":"160","severity":1,"message":"182","line":6,"column":3,"nodeType":"162","messageId":"163","endLine":6,"endColumn":15},{"ruleId":"160","severity":1,"message":"183","line":35,"column":11,"nodeType":"162","messageId":"163","endLine":35,"endColumn":19},{"ruleId":"160","severity":1,"message":"184","line":35,"column":21,"nodeType":"162","messageId":"163","endLine":35,"endColumn":26},{"ruleId":"160","severity":1,"message":"185","line":4,"column":10,"nodeType":"162","messageId":"163","endLine":4,"endColumn":14},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'detail' is assigned a value but never used.","no-native-reassign",["186"],"no-negated-in-lhs",["187"],"'clsx' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["186"],["187"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["186"],["187"],"'FormCheckBox' is defined but never used.","'register' is assigned a value but never used.","'watch' is assigned a value but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]